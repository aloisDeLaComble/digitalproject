
/*
 * Generated by Jspresso. All rights reserved.
 */
package digitalproject.model;
/**
 * Cat entity.
 * <p>
 * Generated by Jspresso. All rights reserved.
 * <p>
 *
 * @hibernate.mapping
 *           default-access = "org.jspresso.framework.model.persistence.hibernate.property.EntityPropertyAccessor"
 *           default-cascade="persist,merge,save-update"
 * @hibernate.class
 *           table = "CAT"
 *           dynamic-insert = "true"
 *           dynamic-update = "true"
 *           persister =
 *            "org.jspresso.framework.model.persistence.hibernate.entity.persister.EntityProxyJoinedSubclassEntityPersister"
 * @author Generated by Jspresso
 */
@SuppressWarnings("all")
public interface Cat extends
  org.jspresso.framework.model.entity.IEntity {
  /**
   * Gets the id.
   *
   * @hibernate.id
   *           generator-class = "assigned"
   *           type = "string"
   * @hibernate.column
   *           name = "ID"
   *           length = "36"
   * @return the id.
   */
  java.io.Serializable getId();

  /**
   * Gets the version.
   *
   * @hibernate.version
   *           unsaved-value = "null"
   *           column = "VERSION"
   *           type = "integer"
   * @hibernate.column
   *           name = "VERSION"
   *           precision = "11"
   * @return the version.
   */
  @org.springframework.data.annotation.Version
  java.lang.Integer getVersion();


  /**
   * Constant value for name.
   */
  String NAME = "name";

  /**
   * Gets the name.
   *
   * @hibernate.property
   * @hibernate.column
   *           name = "NAME"
   *           length = "64"
   * @return the name.
   */
  java.lang.String getName();

  /**
   * Sets the name.
   *
   * @param name
   *          the name to set.
   */
  void setName(java.lang.String name);



  /**
   * Constant value for createTimestamp.
   */
  String CREATE_TIMESTAMP = "createTimestamp";

  /**
   * Gets the createTimestamp.
   *
   * @hibernate.property
   *           type = "timestamp"
   * @hibernate.column
   *           name = "CREATE_TIMESTAMP"
   * @return the createTimestamp.
   */
  java.util.Date getCreateTimestamp();

  /**
   * Sets the createTimestamp.
   *
   * @param createTimestamp
   *          the createTimestamp to set.
   */
  void setCreateTimestamp(java.util.Date createTimestamp);



  /**
   * Constant value for lastUpdateTimestamp.
   */
  String LAST_UPDATE_TIMESTAMP = "lastUpdateTimestamp";

  /**
   * Gets the lastUpdateTimestamp.
   *
   * @hibernate.property
   *           type = "timestamp"
   * @hibernate.column
   *           name = "LAST_UPDATE_TIMESTAMP"
   * @return the lastUpdateTimestamp.
   */
  java.util.Date getLastUpdateTimestamp();

  /**
   * Sets the lastUpdateTimestamp.
   *
   * @param lastUpdateTimestamp
   *          the lastUpdateTimestamp to set.
   */
  void setLastUpdateTimestamp(java.util.Date lastUpdateTimestamp);




}
