#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights
#   reserved.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`

# Reset the REPO variable. If you need to influence this use the environment setup file.
REPO=


# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
		   if [ -z "$JAVA_HOME" ]; then
		      if [ -x "/usr/libexec/java_home" ]; then
			      JAVA_HOME=`/usr/libexec/java_home`
			  else
			      JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
			  fi
           fi       
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/lib
fi

CLASSPATH="$REPO"/digitalproject-core-1.0-SNAPSHOT.jar:"$REPO"/jspresso-app-template-core-4.1.4.jar:"$REPO"/jspresso-hibernate-4.1.4.jar:"$REPO"/jspresso-model-4.1.4.jar:"$REPO"/commons-beanutils-1.9.1.jar:"$REPO"/spring-context-4.0.7.RELEASE.jar:"$REPO"/spring-aop-4.0.7.RELEASE.jar:"$REPO"/aopalliance-1.0.jar:"$REPO"/jspresso-mongo-4.1.4.jar:"$REPO"/spring-data-mongodb-1.5.4.RELEASE.jar:"$REPO"/spring-expression-3.2.10.RELEASE.jar:"$REPO"/mongo-java-driver-2.12.1.jar:"$REPO"/jcl-over-slf4j-1.7.7.jar:"$REPO"/jspresso-fusioncharts-4.1.4.jar:"$REPO"/fusioncharts-free-2.2.jar:"$REPO"/jspresso-jasper-core-4.1.4.jar:"$REPO"/jasperreports-5.1.2.jar:"$REPO"/commons-digester-2.1.jar:"$REPO"/jcommon-1.0.15.jar:"$REPO"/jfreechart-1.0.13.jar:"$REPO"/jdtcore-3.1.0.jar:"$REPO"/castor-1.2.jar:"$REPO"/jackson-core-2.0.5.jar:"$REPO"/jackson-databind-2.0.5.jar:"$REPO"/jackson-annotations-2.0.5.jar:"$REPO"/itext-4.2.1.jar:"$REPO"/bctsp-jdk14-1.38.jar:"$REPO"/bcprov-jdk14-1.38.jar:"$REPO"/bcmail-jdk14-1.38.jar:"$REPO"/pdf-renderer-1.0.5.jar:"$REPO"/jspresso-app-launch-core-4.1.4.jar:"$REPO"/jspresso-util-4.1.4.jar:"$REPO"/slf4j-api-1.7.6.jar:"$REPO"/jspresso-app-template-swing-4.1.4.jar:"$REPO"/jspresso-jasper-swing-4.1.4.jar:"$REPO"/jspresso-swing-application-4.1.4.jar:"$REPO"/jspresso-binding-4.1.4.jar:"$REPO"/jspresso-security-4.1.4.jar:"$REPO"/jbosssx-4.0.20.Final.jar:"$REPO"/picketbox-spi-bare-4.0.20.Final.jar:"$REPO"/jboss-jaspi-api_1.1_spec-1.0.0.Beta1.jar:"$REPO"/common-spi-4.0.20.Final.jar:"$REPO"/identity-spi-4.0.20.Final.jar:"$REPO"/authorization-spi-4.0.20.Final.jar:"$REPO"/servlet-api-2.5.jar:"$REPO"/trove4j-3.0.3.jar:"$REPO"/jspresso-view-4.1.4.jar:"$REPO"/jspresso-action-4.1.4.jar:"$REPO"/joda-time-2.3.jar:"$REPO"/substance-4.3.jar:"$REPO"/dj-swingsuite-0.9.1.jar:"$REPO"/javaxt-core-1.6.2.jar:"$REPO"/openmap-5.0.3.jar:"$REPO"/xtiff-jai-beta-0.3.jar:"$REPO"/jspresso-app-launch-swing-4.1.4.jar:"$REPO"/jspresso-swing-components-4.1.4.jar:"$REPO"/nachocalendar-0.23.jar:"$REPO"/jedit-syntax-2.2.2.jar:"$REPO"/slf4j-log4j12-1.7.6.jar:"$REPO"/log4j-1.2.17.jar:"$REPO"/commons-cli-1.2.jar:"$REPO"/dj-nativeswing-1.0.2.20120308.jar:"$REPO"/dj-nativeswing-swt-1.0.2.20120308.jar:"$REPO"/swt-3.7.2.jar:"$REPO"/org.eclipse.swt.cocoa.macosx.x86_64-3.7.2.jar:"$REPO"/hibernate-ehcache-4.3.4.Final.jar:"$REPO"/jboss-logging-3.1.3.GA.jar:"$REPO"/jboss-logging-annotations-1.2.0.Beta1.jar:"$REPO"/hibernate-core-4.3.4.Final.jar:"$REPO"/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:"$REPO"/dom4j-1.6.1.jar:"$REPO"/xml-apis-1.0.b2.jar:"$REPO"/hibernate-commons-annotations-4.0.4.Final.jar:"$REPO"/hibernate-jpa-2.1-api-1.0.0.Final.jar:"$REPO"/javassist-3.18.1-GA.jar:"$REPO"/antlr-2.7.7.jar:"$REPO"/jandex-1.1.0.Final.jar:"$REPO"/ehcache-core-2.4.3.jar:"$REPO"/commons-collections-3.2.1.jar:"$REPO"/commons-dbcp2-2.1.jar:"$REPO"/commons-pool2-2.3.jar:"$REPO"/commons-logging-1.1.3.jar:"$REPO"/hsqldb-2.3.2.jar:"$REPO"/jspresso-application-4.1.4.jar:"$REPO"/commons-fileupload-1.3.1.jar:"$REPO"/commons-io-2.4.jar:"$REPO"/commons-codec-1.9.jar:"$REPO"/spring-ldap-core-2.0.1.RELEASE.jar:"$REPO"/spring-data-commons-1.8.4.RELEASE.jar:"$REPO"/ldapbp-1.0.jar:"$REPO"/spring-jdbc-4.0.7.RELEASE.jar:"$REPO"/spring-tx-4.0.7.RELEASE.jar:"$REPO"/spring-orm-4.0.7.RELEASE.jar:"$REPO"/commons-lang-2.6.jar:"$REPO"/spring-beans-4.0.7.RELEASE.jar:"$REPO"/spring-core-4.0.7.RELEASE.jar:"$REPO"/foxtrot-2.0.jar:"$REPO"/digitalproject-startup-swing-1.0-SNAPSHOT.jar

ENDORSED_DIR=
if [ -n "$ENDORSED_DIR" ] ; then
  CLASSPATH=$BASEDIR/$ENDORSED_DIR/*:$CLASSPATH
fi

if [ -n "$CLASSPATH_PREFIX" ] ; then
  CLASSPATH=$CLASSPATH_PREFIX:$CLASSPATH
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS -Djava.security.auth.login.config="$BASEDIR"/conf/jaas.config -Dswing.defaultlaf=org.jvnet.substance.SubstanceLookAndFeel -Dsubstancelaf.watermark.tobleed \
  -classpath "$CLASSPATH" \
  -Dapp.name="digitalproject-with-testdata" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  org.jspresso.framework.application.launch.swing.SwingLauncher -applicationClass digitalproject.startup.swing.development.SwingDevApplicationStartup -splash classpath:digitalproject/images/icon.png \
  "$@"
